---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { isPublic = true, title, description, pubDate, type, heroImage } = Astro.props;
const posts = (await getCollection("blog")).filter((post) => post.data.isPublic !== false).sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

const currentIndex = posts.findIndex((post) => post.slug === Astro.params.slug);
const previousPost = posts[currentIndex + 1]?.slug;
const nextPost = posts[currentIndex - 1]?.slug;


---

<html lang="en" class="dark bg-[#131313] scroll-smooth">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
  </head>

  <body data-astro-prefetch>
    <div class:list={[isPublic ? "hidden" : "bg-red-500 text-white text-center py-2"]}>
      <p class="text-sm">This post is not public.</p>
    </div>
    <Header />
    <main class:list={[isPublic ? "" : "hidden", "relative overflow-hidden py-8"]}>
      <article class="relative px-4 py-4 sm:px-4 lg:px-6 prose-a:text-white prose prose-neutral prose-lg !prose-invert mx-auto mt-6 prose-img:pointer-events-none prose-headings:scroll-m-20 max-w-4xl prose-img:w-full prose-img:rounded-lg prose-video:w-full prose-video:rounded-lg">
        <style>
          article *:not(img) {
            max-width: 42rem;
          }

          article img {
            max-width: 56rem;
          }
        </style>
        <div class="mt-0 mb-5 mx-auto max-w-2xl">
          <div class="mx-auto">
            <div class="text-xs font-bold relative z-50 text-neutral-300">
              <span class="uppercase block relative z-50" transition:name={title+type}>{type}</span>
              <span class="mt-1 text-sm font-semibold block relative z-50" transition:name={'pubDate'+(pubDate.getUTCFullYear()+pubDate.getUTCMonth()+pubDate.getUTCDate()).toString()}>
                <FormattedDate date={pubDate} />
              </span>
            </div>
          </div>
        </div>
        <div class="mt-0 mb-0 mx-auto max-w-2xl">
          <div class="mx-auto">
            <h1 class="text-5xl font-bold text-white relative z-50" transition:name={title}>{title}</h1>
          </div>
        </div>
        {
          description && (
            <div transition:animate="slide" class="mt-5 mb-0 mx-auto max-w-2xl ">
              <div class="mx-auto">
                <p class="font-medium text-white text-2xl leading-7 relative z-50" set:html={description} />
              </div>
            </div>
          )
        }
        {heroImage && <img src={heroImage} transition:name={heroImage} alt="heroImage" class="mx-auto" />}
        <div class="mx-auto prose-lg leading-[1.688rem]">
          <slot />
        </div>
      </article>
    </main>
    <!-- Previous/Next post -->
    <div class="navigation">
      <div class={`flex max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8 ${previousPost && nextPost ? "justify-between" : previousPost ? "justify-start" : nextPost ? "justify-end" : ""}`}>

          {previousPost && (
            <a href={`/${previousPost}`} class="bg-neutral-800 group rounded-md flex items-center justify-end text-sm font-medium text-neutral-300  transition-all duration-300">
              <div class="px-4 py-3">
                <div class="flex justify-start items-center">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 group-hover:-translate-x-1 transition-all duration-300">
                    <path fill-rule="evenodd" d="M17 10a.75.75 0 01-.75.75H5.612l4.158 3.96a.75.75 0 11-1.04 1.08l-5.5-5.25a.75.75 0 010-1.08l5.5-5.25a.75.75 0 111.04 1.08L5.612 9.25H16.25A.75.75 0 0117 10z" clip-rule="evenodd" />
                  </svg>
                  <span class="group-hover:text-neutral-400">Previous</span>
                </div>
                <p class="text-white">{posts[currentIndex + 1].data.title}</p>
              </div>
            </a>
          )}
          {nextPost && (
            <a href={`/${nextPost}`} class="bg-neutral-800 group rounded-md flex items-center justify-end text-sm font-medium text-neutral-300  transition-all duration-300">
              <div class="px-4 py-3">
                <div class="flex justify-end items-center">
                  <span class="group-hover:text-neutral-400">Next</span>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 group-hover:translate-x-1 transition-all duration-300">
                    <path fill-rule="evenodd" d="M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z" clip-rule="evenodd" />
                  </svg>
                </div>
                <p class="text-white">{posts[currentIndex - 1].data.title}</p>
              </div>
            </a>
          )}
      </div>
    </div>
    
    <Footer />
  </body>
</html>
